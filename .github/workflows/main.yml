name: Build and Release Electron App for Windows and Linux

on:
  push:
    branches:
      - main  # Adjust if you use a different default branch

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build Electron App for Linux
        run: npm run build:linux

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: markdoom-linux
          path: ./dist/*.AppImage  # Adjust this path to the Linux output

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build Electron App for Windows
        run: npm run build:win

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: markdoom-windows
          path: ./dist/*.exe  # Adjust this path to the Windows output

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from package.json
        id: get_version
        run: |
          version=$(jq -r .version < package.json)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          release_name: "MarkDoom v${{ env.VERSION }}"
          draft: false
          prerelease: false
          body: |
            ### Changes in MarkDoom v${{ env.VERSION }}
            - Build Linux and Windows binaries for MarkDoom.
            - Electron-based app with React and TypeScript.

      - name: Upload Linux Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.AppImage  # Adjust to your Linux output path
          asset_name: markdoom-linux-${{ env.VERSION }}.AppImage
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.exe  # Adjust to your Windows output path
          asset_name: markdoom-windows-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
